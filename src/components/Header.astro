---
import ToggleTheme from "./ToggleTheme.astro";

const navItems = [
  {
    title: "Inicio",
    label: "top",
    url: "#top",
  },
  {
    title: "Experiencia",
    label: "experiencia",
    url: "#experiencia",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "#proyectos",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "#contacto",
  },
];
---

<header
  class="flex justify-center gap-y-10 items-center
  py-3 px-4
  w-full max-w-[850px]
  mx-auto s
  sticky top-0"
>
  <nav
    class="flex flex-row justify-between gap-x-2
    opacity-80
    rounded-4xl
    py-2 px-4
    bg-white border-amber-100
    backdrop-blur-3xl
    font-bold
    text-sm
    dark:bg-sky-900 border dark:border-none
    sm:gap-x-2.5 sm:text-base"
  >
    {
      navItems.map((link) => (
        <a
          class="  hover:text-sky-600 dark:hover:text-yellow-300"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ToggleTheme />
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const ACTIVE_CLASSES = ["text-blue-600", "dark:text-yellow-300"];
    const INACTIVE_CLASSES = ["text-blue-600", "dark:text-yellow-300"];

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add(...INACTIVE_CLASSES);
            } else {
              item.classList.remove(...ACTIVE_CLASSES);
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 1.0,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>
